CPUID v1.01.07 (October, 28, 2020)
1) Bugs fixed for old processors that do not support extended CPUID
(functions 80000000h and higher). Changes at binary level and java code.
1.1) If function 80000000h not supported, invalid resuts of this function
     not saved to binary dump.
1.2) If loaded binary dump contains invalid resuts of function 80000000h,
     wrong data not parsed, results strings is "n/a" (not available).
2) Some parameters names changed for function 80000008h, 
   for prevent too long text strings.



CPUID v1.01.06 (October, 21, 2020)
This version associated with AMD public documents update:
https://www.amd.com/en/support/tech-docs

AMD64 Technology
AMD64 Architecture Programmer's Manual
Volume 2: System Programming
Publication No. 24593
Revision 3.36
Date October 2020
Below referenced as [Updated Volume 2].
Use page numbers BY DOCUMENT, NOT BY PDF VIEWER.

AMD64 Technology
AMD64 Architecture Programmer's Manual
Volume 3: General-Purpose and System Instrutions
Publication No. 24594
Revision 3.31
Date October 2020
Below referenced as [Updated Volume 3].
Use page numbers BY DOCUMENT, NOT BY PDF VIEWER.

CPUID new bits list:
CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.
Listed NEW BITS only, added at CPUID v1.01.06.
Bits, previously known or previously documented by Intel, not listed at this table.
--------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
--------------------------------------------------------------------------------------------------
80000008h    -       EBX     3       INVLPGB, support INVLPGB, TLBSYNC instructions
80000008h    -       EBX     20      NO LMSLE, EFER.LMSLE unsupported indication
80000008h    -       EBX     21      INVLPGB NP, support INVLPGB instruction for nested pages
80000008h    -       EDX     15-0    Maximum page count for INVLPGB instruction
8000000Ah    -       EDX     19      SSS CHK, SSSCheck, SVM supervisor shadow stack restrictions
--------------------------------------------------------------------------------------------------

Plus, this previously known bits added.
--------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
--------------------------------------------------------------------------------------------------
8000001Ch    -       EAX     0       LWP, LwpAvail, LWP feature is available
8000001Ch    -       EAX     1       LWPVAL, LWPVAL instruction available
8000001Ch    -       EAX     2       LWP IRE, LWP instructions retired event available
8000001Ch    -       EAX     3       LWP BRE, LWP branch retired event available
8000001Ch    -       EAX     4       LWP DME, LWP DC miss event available
8000001Ch    -       EAX     5       LWP CNH, LWP core clocks not halted event available
8000001Ch    -       EAX     6       LWP RNH, LWP core reference clocks not halted event available
8000001Ch    -       EAX     29      LWP CONT, sampling in continuous mode is available
8000001Ch    -       EAX     30      LWP PTSC, performance TSC in event record is available
8000001Ch    -       EAX     31      LWP INT, interrupt on threshold overflow available
--------------------------------------------------------------------------------------------------

Some details:

1) CPUID function 80000008h, bit EBX.3 (support INVLPGB, TLBSYNC instructions)
-------------------------------------------------------------------------------
Listed at [Updated Volume 3], page 623, see CPUID Fn8000_0008_EBX Extended Feature Identifiers
Details at [Updated Volume 3], see new instructions description:
[Updated Volume 3], page 389, see INVLPGB, Invalidate TLB Entry(s) with Broadcast,
[Updated Volume 3], page 480, see TLBSYNC, Synchronize TLB Invalidations

2) CPUID function 80000008h, bit EBX.20 (EFER.LMSLE unsupported indication)
----------------------------------------------------------------------------
Listed at [Updated Volume 3], page 623, see CPUID Fn8000_0008_EBX Extended Feature Identifiers.
Details at [Updated Volume 2], page 118, see 4.12.2 Data Limit Checks in 64-bit mode

3) CPUID function 80000008h, EBX.21 (support INVLPGB instruction for nested pages)
-----------------------------------------------------------------------------------
Listed at [Updated Volume 3], page 623, see CPUID Fn8000_0008_EBX Extended Feature Identifiers.
Details at [Updated Volume 3], see new instructions description:
[Updated Volume 3], page 389, see INVLPGB, Invalidate TLB Entry(s) with Broadcast,

4) CPUID function 80000008h, EDX.[15-0] (Maximum page count for INVLPGB instruction)
-------------------------------------------------------------------------------------
Details at [Updated Volume 3], see new instructions description:
[Updated Volume 3], page 389, see INVLPGB, Invalidate TLB Entry(s) with Broadcast,
plus page 390, contains:
The maximum count supported is reported in CPUID function 8000_0008h, EDX[15:0].

5) CPUID function 8000000Ah, bit EDX.19 (SVM supervisor shadow stack restrictions)
-----------------------------------------------------------------------------------
Listed at [Updated Volume 3], page 625, see CPUID Fn8000_000A_EDX SVM Feature Identification
Details at [Updated Volume 2], page 523, see 15.25.14 Supervisor Shadow Stacks,
but listed wrong function number = 8008000Ah, 
correct function number = 8000000Ah, typo error in [Updated Volume 2] ?

6) CPUID function 8000001Ch, register EAX (LWP capabilities)
-------------------------------------------------------------------
Listed at [Updated Volume 3], page 629, see CPUID Fn8000_001C_EAX Lightweight Profiling Capabilities 0
Details at [Updated Volume 2], page 420, see 13.4.3.3 Detecting LWP Capabilities

7) Still unknown undocumented bits:
-----------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
-----------------------------------------------
80000007h    -       EBX     4       ?
80000008h    -       EBX     10      ?
80000008h    -       EBX     27      ?
8000000Ah    -       EDX     11      ?
-----------------------------------------------



CPUID v1.01.05 (October, 13, 2020)

1) For CPUID function = 00000002h (TLB, Cache, Prefetch information), 
   add descriptor byte value = 0FEh means:
   "use CPUID leaf 18h to query TLB and other address translation parameters".

2) For CPUID function = 0000001Bh (PCONFIG instruction information), fix bug:
   13 empty lines when data missing.



CPUID v1.01.04 (October, 4, 2020)

1) Support new Intel CPU features, declared at document:
architecture-instruction-set-extensions-programming-reference.pdf
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-041
OCTOBER 2020
https://software.intel.com/content/www/us/en/develop/download/intel-architecture-instruction-set-extensions-programming-reference.html?wapkw=extension%20programming%20reference

2) Additionally, CPUID function 0000000Dh, subfunction 0, EAX bits 31-0, Bitmap for saved-restored context components, declared at document:
325462-sdm-vol-1-2abcd-3abcd.pdf
Intel 64 and IA-32 Architectures
Software Developer's Manual
Combined Volumes:
1, 2A, 2B, 2C, 2D, 3A, 3B, 3C, 3D and 4.
Order Number: 325462-072US
May 2020.
https://software.intel.com/content/www/us/en/develop/download/intel-64-and-ia-32-architectures-sdm-combined-volumes-1-2a-2b-2c-2d-3a-3b-3c-3d-and-4.html

3) CPUID new and updated names bits list:
CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000006h    -       EAX     23      EHFI, Enhanced Hardware Feedback Interface
00000006h    -       ECX     11-8    EHFI classes count
00000007h    0       EBX     12      RDT-M, Resource Director Technology - monitoring
00000007h    0       EBX     15      RDT-A, Resource Director Technology - allocation
00000007h    0       EDX     5       UINTR, User Interrupts
00000007h    0       EDX     23      FP16, Floating Point 16-bit format
00000007h    1       EAX     4       AVX_VNNI, AVX versions of the Vector Neural Network instructions
00000007h    1       EAX     10      F MOVSB, Fast zero-length MOVSB
00000007h    1       EAX     11      F STOSB, Fast short STOSB
00000007h    1       EAX     12      F CM SC, Fast short CMPSB, SCASB
00000007h    1       EAX     22      HRESET, Processor History Reset Leaf
0000000Ah    -       ECX     31-0    Fixed counters bitmap
0000000Dh    0       EAX     31-0    Bitmap for saved-restored context components, additions
00000020h    0       EAX     31-0    Processor History Reset maximum sub-leaf
00000020h    0       EBX     31-0    Bitmap for IA32_HRESET_ENABLE MSR
---------------------------------------------------------------------------------------------------------------

4) XCR0 new bits list:
 Bit   Comments
-----------------------------------------------------------------------------
 14    UINTR        UINTR (User Interrupt) state
-----------------------------------------------------------------------------



CPUID v1.01.03 (September, 22, 2020)
Support context components, added to
lists at XCR0 and IA32_XSS registers.
Support Intel BUSLOCK debug feature.

1) Documents:
--------------

[1]
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-040
JUNE 2020
https://software.intel.com/content/www/us/en/develop/download/intel-architecture-instruction-set-extensions-programming-reference.html

[2]
Intel 64 and IA-32 Architectures
Software Developer's Manual
Documentation Changes
May 2020
Document Number: 252046-064
https://software.intel.com/content/www/us/en/develop/download/intel-64-and-ia-32-architectures-software-developers-manual-documentation-changes.html

[3]
Intel 64 and IA-32 Architectures
Software Developer's Manual
Combined Volumes:
1, 2A, 2B, 2C, 2D, 3A, 3B, 3C, 3D and 4.
Order Number: 325462-072US
May 2020.
https://software.intel.com/content/www/us/en/develop/download/intel-64-and-ia-32-architectures-sdm-combined-volumes-1-2a-2b-2c-2d-3a-3b-3c-3d-and-4.html

[4]
AMD64 Architecture
Programmer's Manual:
Volumes 1-5
Publication# 40332  Revision 4.00
Issue Date: April 2020
https://www.amd.com/system/files/TechDocs/40332.pdf

2) CPUID bits:
---------------

CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.
-------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
-------------------------------------------------------------------------------
00000007h    0       ECX     24      BUSLOCK, Bus lock debug exception
-------------------------------------------------------------------------------

CPUID Function = 00000007h, Subfunction = 0, Register = ECX, Bit = 24, Name = BUSLOCK
Bus lock debug exception.
Document [1] 9.1 Bus lock debug exception.

3) XCR0 bits, Intel additions:
-------------------------------

Context save-restore management vector: 
Added bits list for XCR0 and CPUID function=0Dh, subfunction=0, registers=EDX:EAX.
Bit number means context component number.

 Bit   Comments
-----------------------------------------------------------------------------
 8     PT,        IA32_XSS: Intel Processor Trace state
 11    CET_U,     IA32_XSS: Control Flow Enforcement Technology, User State
 12    CET_S,     IA32_XSS: Control Flow Enforcement Technology, Supervisor State
 13    HDC        IA32_XSS: Hardware Duty Cycling state
 16    HWP,       IA32_XSS: Hardware P-states
 17    XTILECFG,  Intel Advanced Matrix Extension (AMX) tile configuration
 18    XTILEDATA, Intel Advanced Matrix Extension (AMX) tile data
-----------------------------------------------------------------------------

Detalization.
Bits (except ID=11, ID=12), listed at document [1], table 1-3.

Context Component ID=8     
Used for IA32_XSS, Intel Processor Trace (PT) state, managed by IA32_XSS (supervisor)
Document [2] 13.5.6 PT State

Context Component ID=11    
Used for IA32_XSS, Control Flow Enforcement Technology, User State (CET_U), managed by IA32_XSS (supervisor)
Document [2] 13.5.8 CET State

Context Component ID=12    
Used for IA32_XSS, Control Flow Enforcement Technology, Supervisor State (CET_S), managed by IA32_XSS (supervisor)
Document [2] 13.5.8 CET State

Context Component ID=13    
Used for IA32_XSS, Hardware Duty Cycling (HDC) state, managed by IA32_XSS (supervisor)
Document [2] 13.5.9 HDC State

Context Component ID=16    
Used for IA32_XSS, Hardware P-states (HWP), managed by IA32_XSS (supervisor)
Document [2] 13.5.10 HWP State 

Context Component ID=17    
XTILECFG, Intel Advanced Matrix Extension (AMX) tile configuration
Document [1] 3.2.1 State Components for Intel AMX.

Context Component ID=18    
XTILEDATA, Intel Advanced Matrix Extension (AMX) tile data
Document [1] 3.2.1 State Components for Intel AMX.

4) Check for XCR0 bits AMD additions:
--------------------------------------
For AMD processors, no new bits defined (documented) at XCR0 register.
Document [4] 11.5.2 XFEATURE_ENABLED_MASK



CPUID v1.01.02 (September, 16, 2020)
Support advanced features listed at document:
343965-intel-key-locker-specification.PDF

Intel Key Locker Specification
#343965-001US
SEPTEMBER 2020

CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.
"*" means this function/subfunction support added
"-" means subfunctions not used for this function
Not listed registers and bits of CPUID function 00000019h reserved.

---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000007h    0       ECX     23      AES KL, AES Key Locker
00000019h    -       EAX     0       KL CPL0  , KL restriction of CPL0-only
00000019h    -       EAX     1       KL NO ENC, KL restriction of no-encrypt
00000019h    -       EAX     2       KL NO DEC, KL restriction of no-decrypt
00000019h    -       EBX     0       AESKLE, AES Key Locker instructions are fully enabled by firmware or OS
00000019h    -       EBX     2       WIDE KL, AES wide Key Locker instructions
00000019h    -       EBX     4       IWK BACK, IWKeyBackup MSR, can backing up the internal wrapping key
00000019h    -       ECX     0       NO BACK , Can use NoBackup parameter for LOADIWKEY
00000019h    -       ECX     1       IWK RAND, Can use KeySource=1, randomization of the internal wrapping key
---------------------------------------------------------------------------------------------------------------


CPUID v1.01.01 (September, 09, 2020)
Support advanced features listed at document:
intel-tdx-cpu-architectural-specification.PDF.

Intel Trust Domain CPU Architectural Extensions
#343754-001US
SEPTEMBER 2020

---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000012h    0       EAX     7       ENCLU R2, EVERIFYREPORT2 information leaf of ENCLU instruction.
---------------------------------------------------------------------------------------------------------------


CPUID v1.01.00 (September, 09, 2020)
Support advanced features listed at document:
architecture-instruction-set-extensions-programming-reference.PDF.

Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference

#319433-040
JUNE 2020

CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.
"*" means this function/subfunction support added
"-" means subfunctions not used for this function

1) Changes in Java Code: update CPUID functions classes, add some new classes.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000007h    0       EDX    19       ALBR, Architectural Last Branch Record registers.
00000017h    0        *     *        System-On-Chip (SOC) Vendor Attribute Enumeration.
00000017h    1-3      *     *        System-On-Chip (SOC) Vendor Brand String.
00000017h    >3       *     *        Reserved.
00000018h    0        *     *        Deterministic address translation parameters and TLBs list, main leaf.
00000018h    > 0      *     *        Deterministic address translation parameters and TLBs list, sub-leafs.
0000001Ch    -        *     *        Enumeration of Architectural LBR (Last Branch Record) capabilities.
0000001Dh    0        *     *        Intel AMX (Advanced Matrix Extensions) Highest numbered palette sub-leaf.
0000001Dh    > 1      *     *        Intel AMX Palette sub-leaf parameters.
0000001Eh    0        *     *        Intel AMX TMUL (Tile Multiply) information.
0000001Fh    *        *     *        V2 Extended Topology Enumeration.
---------------------------------------------------------------------------------------------------------------

2) Changes in Assembler Code: update Java Native Interface (JNI) libraries for Windows 32/64, Linux 32/64.
---------------------------------------------------------------------------------------------------------------
Unlock get subfunctions list procedure for function 00000017h, 00000018h.
Add get subfunctions list procedure for function 0000001Dh, 0000001Fh.
---------------------------------------------------------------------------------------------------------------


CPUID v1.00.08 (July, 09, 2020)
This version associated with AMD public document update:

Processor Programming Reference (PPR) for AMD
Family 17h, Model 60h, Revision A1 Processors.
#55922-A1 Rev 3.05 - Jul 7, 2020
Document archive 55922-A1-PUB.zip

Add new 3 bits.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
80000008h    -       EBX    13       INT WBINVD, interruptible WBINVD, WBNOINVD instructions operations.
80000008h    -       EBX    19       IBRS SM, IBRS provides same mode protection.
80000008h    -       EBX    23       PPIN, Protected Processor Inventory Number.
---------------------------------------------------------------------------------------------------------------

Some details about each bit, used pages for document in archive 55922-A1-PUB.zip:

CPUID function=80000008h, no subfunctions, register=EBX, bit=13
Interruptible WBINVD, WBNOINVD instructions operations,
see pages 81, 145.

CPUID function=80000008h, no subfunctions, register=EBX, bit=19
IBRS provides same mode protection,
see page 81, bit listed only without details.

CPUID function=80000008h, no subfunctions, register=EBX, bit=23
Protected Processor Inventory Number,
see pages 81, 167.

See for more details:
https://www.amd.com/en/support/tech-docs
https://developer.amd.com/resources/developer-guides-manuals/
Document archive 55922-A1-PUB.zip


CPUID v1.00.07 (June, 28, 2020)
This version associated with Intel public document update:
architecture-instruction-set-extensions-programming-reference.PDF
below referenced as [DOC2].

Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
Ref# Document Number: #319433-040
JUNE 2020

CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.

Add new 4 bits and bitfields.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000007h    0       EDX    22       AMX BF16. Tile computational operations on BFLOAT16 numbers.
00000007h    0       EDX    23       Reserved.
00000007h    0       EDX    24       AMX TILE. Advanced Matrix Extensions Tile architecture.
00000007h    0       EDX    25       AMX INT8. Tile computational operations on 8-bit integer numbers.
---------------------------------------------------------------------------------------------------------------

Some details about each bit(bitfield):

CPUID function=00000007h, subfunction=0, register=EDX, bit=22
AMX BF16. Advanced Matrix Extensions. Tile computational operations on BFLOAT16 numbers.
[DOC2] pages 24, 89, 105.

CPUID function=00000007h, subfunction=0, register=EDX, bit=24
AMX TILE. Advanced Matrix Extensions. Tile architecture.
[DOC2] pages 24, 89, 100, 103, 109, 111, 113.

CPUID function=00000007h, subfunction=0, register=EDX, bit=25
AMX INT8. Advanced Matrix Extensions. Tile computational operations on 8-bit integer numbers.
[DOC2] pages 24, 89, 107. 

See for more details:
https://software.intel.com/content/www/us/en/develop/download/intel-architecture-instruction-set-extensions-programming-reference.html


CPUID v1.00.06 (June, 21, 2020)
This version associated with Intel public document update:
252046-sdm-change-document.PDF
below referenced as [DOC1].

Intel 64 and IA-32 Architectures Software Developer's Manual
Documentation Changes
Ref# Document Number: #252046-064
MAY 2020

CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.

Add new 2 bits and bitfields.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000007h    0       ECX    31       PKS. Supports protection keys for supervisor-mode pages if 1.
00000018h    0       EDX    [4-0]    Translation cache type field, new values added:
                                      00100b = Load Only TLB. Hit on loads, fills on both loads and stores
                                      00101b = Store Only TLB. Hit on stores, fill on stores.
---------------------------------------------------------------------------------------------------------------

Some details about each bit(bitfield):

CPUID function=00000007h, subfunction=0, register=ECX, bit=31
PKS, Protection Keys for Supervisor-mode pages,
[DOC1] pages 258, 527, 529, ... 1696.

CPUID function=00000018h, subfunction=0, register=EDX, bits=[04-00]
Add Load Only TLB and Store Only TLB types for 
Deterministic Address Translation Parameters.
00100b = Load Only TLB. Hit on loads, fills on both loads and stores
00101b = Store Only TLB. Hit on stores, fill on stores.
[DOC1] pages 268.

See for more details:
https://www.intel.com/content/www/us/en/design/resource-design-center.html


CPUID v1.00.05 (May, 24, 2020)
This version associated with Intel public document update:
Architecture-instruction-set-extensions-programming-reference.PDF

Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
Ref. #319433-038
MARCH 2020.

This PDF below referenced as [DOC].

CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.

Add new 7 bits and bitfields.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000007h    0       EDX    14       SERIALIZE instruction
00000007h    0       EDX    15       HYBRID, the processor is identified as hybrid part
00000007h    0       EDX    16       TSXLDTRK, the processor supports Intel TSX suspend load address tracking
0000000Fh    1       EAX    [07-00]  RDT CNT: 00h=24bit counters, 01h=25bit counters, 25h=61bit counters
0000000Fh    1       EAX    8        QM OVF: IA32_QM_CTR MSR bit 61 is overflow bit
00000010h    3       ECX    0        PT MBA: Per-thread Memory Bandwidth Allocation controls supported
0000001Ah    0       EAX    [31-24]  CORE TYPE: 10h=Reserved, 20h=Intel Atom, 30h=Reserved, 40h=Intel Core
---------------------------------------------------------------------------------------------------------------

Some details about each bit(bitfield):

CPUID function=00000007h, subfunction=0, register=EDX, bit=14
SERIALIZE instruction.
This is alternative for legacy method (use CPUID for serialization),
unlike CPUID, SERIALIZE not changes CPU registers.
[DOC] page 2.14 (72).

CPUID function=00000007h, subfunction=0, register=EDX, bit=15
HYBRID, the processor is identified as hybrid part.
Different cores can be mixed at CPU package?
[DOC] page 1.33 (47).

CPUID function=00000007h, subfunction=0, register=EDX, bit=16
TSXLDTRK, the processor supports Intel TSX suspend load address tracking,
instructions:
XRESLDTRK - Resume Tracking Load Address.
XSUSLDTRK - Suspend Tracking Load Address.
[DOC] page 5.1 (93).

CPUID function=0000000Fh, subfunction=1, register=EAX, bits=[07-00]
RDT CNT: 00h=24bit counters, 01h=25bit counters, 25h=61bit counters.
Width of bandwidth monitoring counters.
[DOC] page 9.2 (130-131).

CPUID function=0000000Fh, subfunction=1, register=EAX, bit=8
QM OVF: IA32_QM_CTR MSR bit 61 is overflow bit.
Width of bandwidth monitoring counters and bits interpretation.
[DOC] page 9.2 (130-131).

CPUID function=00000010h, subfunction=3, register=ECX, bit=0
PT MBA: Per-thread MBA controls supported.
Per-thread Memory Bandwidth Allocation control.
[DOC] page 9.6 (134).

CPUID function=0000001Ah, subfunction=0, register=EAX, bit=[31-24]
CORE TYPE: 10h=Reserved, 20h=Intel Atom, 30h=Reserved, 40h=Intel Core
Different cores can be mixed at CPU package?
[DOC] page 1.33 (47).

Plus, CPUID summary at [DOC] page 1.4-1.21 (18-35)

See for more details:
https://www.intel.com/content/www/us/en/design/resource-design-center.html
https://software.intel.com/content/www/us/en/develop/download/intel-architecture-instruction-set-extensions-and-future-features-programming-reference.html?wapkw=instruction%20set%20extensions%20reference%20manual
https://software.intel.com/content/www/us/en/develop/articles/intel-sdm.html?wapkw=instruction%20set%20extensions%20reference%20manual
https://software.intel.com/content/www/us/en/develop/download/intel-64-and-ia-32-architectures-optimization-reference-manual.html?wapkw=optimization%20reference%20manual
---------------------------------------------------------------------------------------------------------------


CPUID v1.00.04 (April, 29, 2020)
This version associated with big update of AMD public documents:
update secure communication methods between Hypervisors and Guests,
support SNP (Secure Nested Paging), plus AMD Secure Processor (AMD-SP) functionality.
See below [1]-[6] documents reference.

Add new 10 bits.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
8000000Ah   -        EDX    24       TLBICTL, TLB instructions control: INVLPGB, TLBSYNC instructions
8000001Fh   -        EAX    15       PHIBS, PreventHostIbs, Disallowing IBS use by the host supported
8000001Fh   -        EAX    14       DBG SW, DebugSwap, Full debug state swap supported for SEV-ES guests
8000001Fh   -        EAX    13       ALT INJ, AlternateInjection, Alternate Injection supported
8000001Fh   -        EAX    12       RES INJ, RestrictedInjection, restricted injection supported
8000001Fh   -        EAX    11       HOST 64, 64BitHost, SEV guest execution only allowed from 64-bit host
8000001Fh   -        EAX    10       HWCC ED, HwEnfCacheCoh, Hardware cache coherency across encryption domains enforced
8000001Fh   -        EAX    5        VMPL, Virtual Machine Permission (Privilege, Priority) Levels
8000001Fh   -        EAX    4        SEV-SNP,  Secure Nested Paging
8000001Fh   -        EBX    15-12    NumVMPL, Number of VM Permission Levels supported
---------------------------------------------------------------------------------------------------------------
Some detalization, 
[x] means data source, see below, enumerated [x].

CPUID.8000000Ah.EDX.24 = TLBICTL, TLB instructions control: INVLPGB, TLBSYNC instructions
This bit indicates support instructions:
Bit position "TLBICTL" declared at [3].
INVLPGB  (Invalidate TLB Entry(Entries) with Broadcast), instruction detail description at [3].
TLBSYNC (Synchronize TLB Invalidations), instruction detail description at [3].

CPUID.8000001Fh.EAX.15 = PreventHostIbs, Disallowing IBS use by the host supported
Bit position "PreventHostIbs" declared at [3].
Functional and used MSR description at [2].

CPUID.8000001Fh.EAX.14 = DebugSwap, Full debug state swap supported for SEV-ES guests
Bit position "DebugSwap" declared at [3].
Functional and used MSR description at [2].

CPUID.8000001Fh.EAX.13 = AlternateInjection, Alternate Injection supported
Bit position "AlternateInjection" declared at [3].
Description at [2].

CPUID.8000001Fh.EAX.12 = RestrictedInjection, restricted injection supported
Bit position "RestrictedInjection" declared at [3].
Description at [2].

CPUID.8000001Fh.EAX.11 = 64BitHost, SEV guest execution only allowed from 64-bit host
Bit position "64BitHost" declared at [3].

CPUID.8000001Fh.EAX.10 = HwEnfCacheCoh, Hardware cache coherency across encryption domains enforced
Bit position "HwEnfCacheCoh" declared at [3].

CPUID.8000001Fh.EAX.5 = VMPL, Virtual Machine Permission (Privilege) Levels
Bit position "VMPL" declared at [3].
Functional and used resources description at [2], [3].

CPUID.8000001Fh.EAX.4 = SEV-SNP,  Secure Nested Paging
Bit position "SEV-SNP" declared at [3].
Functional, used resources and new SNP support instruction sub-set description at [2], [3].

CPUID.8000001Fh.EBX.15-12 = NumVMPL, Number of VM Permission Levels supported
Bit position "NumVMPL" declared at [3].
Functional and used resources description of VMPL at [2], [3],
this field associated with VMPL.

---------------------------------------------------------------------------------------------------------------
Data source and detail information at documents:

[1] AMD64 Architecture Programmer's Manual 
    Volume 1 Application Programming. 
    Pub #24592 Rev 3.22 December 2017.

[2] AMD64 Architecture Programmer's Manual 
    Volume 2 System Programming. 
    Pub #24593 Rev 3.33 April 2020.

[3] AMD64 Architecture Programmer's Manual 
    Volume 3. General Purpose and System Instuctions.
    Pub #24594 Rev 3.30 April 2020.

[4] AMD64 Architecture Programmer's Manual 
    Volume 4. 128-Bit and 256-Bit Media Instructions.
    Pub #26568 Rev 3.23 February 2019.

[5] AMD64 Architecture Programmer's Manual 
    Volume 5. 64-Bit Media and x87 Floating-Point
    Instructions.
    Pub #26569 Rev 3.15 May 2018.

[6] AMD64 Architecture Programmer's Manual 
    Volumes 1-5
    (combined, all volumes 1-5 at one PDF)
    Pub #40332 Rev 4.00 April 2020.

https://developer.amd.com/resources/developer-guides-manuals/
https://www.amd.com/en/support/tech-docs
---------------------------------------------------------------------------------------------------------------



CPUID v1.00.03 (February, 13, 2020)
Add new bit:
Function=8000000Ah, register=EDX, bit=20. Guest Spec_ctl.
Data sources:
1) Preliminary Processor Programming Reference (PPR)
for AMD Family 17h Model 31h Revision B0 Processors
55803 Rev 0.54 - Sep 12, 2019.
2) White Paper. 
AMD64 Technology Indirect Branch Control Extension.
Revision 7.10.18.


CPUID v1.00.02 (October, 27, 2019)
Java code refactoring and optimization, internal changes.
Report generation optimized by StringBuilder class.


CPUID v1.00.01 (October, 13, 2019)
Java code refactoring and optimization, internal changes.


October, 10, 2019.
Add refactoring branch.


CPUID v0.83 (October, 7, 2019)
Add new AMD virtualization options feature bits:
1) Function=8000000Ah, register=EDX, bit=17.  GMET = Guest mode execute trap extension.
2) Function=8000001Fh, register=EAX, bit=16.  VTE = Virtual transparent encryption.
Data source:
AMD64 Architecture Programmer's Manual
Volume 2: System Programming.
Publication 24593. Rev 3.32. October 2019.


CPUID v0.82 (October, 5, 2019)
Bug fix for CPUID function 0000000Dh (context management),
correct detect features:
XSAVEOPT support,
XSAVEC and compact XRSTOR form support,
XGETBV function 1 support, 
XSAVES/XRSTORS and IA32_XSS.


CPUID v0.81 (September, 20, 2019)
Update method for write Region size = F ( Address width ).


CPUID v0.80 (September, 20, 2019)
Update CPUID function 00000012h.


CPUID v0.79 (September, 19, 2019)
1) Bug fix: 
if LOAD BINARY function used but cancelled without load file, 
next use SAVE BINARY function save CPUID.BIN file with size=0.
2) Update CPUID function 00000012h.


CPUID v0.78 (September, 18, 2019)
1) Internal changes, support reserved CPUID functions
as child classes of parent class.
2) Update function 00000006h.
3) Update function 0000000Dh.


CPUID v0.77 (September, 16, 2019)
Add new bits and bitfields for CPUID functions:
00000006h, 00000007h, 00000015h.
Data source:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-037.pdf
MAY 2019.


CPUID v0.76 (September, 16, 2019)
Add and modify java classes for CPUID functions:
1) Function=00000010h , Intel Resource Director Technology (RDT).
2) Function=0000001Bh , PCONFIG instruction.
3) Function=0000001Fh , Advanced topology enumeration.
Technological update, this functions yet locked, under debug.
Data source:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-037.pdf
MAY 2019.


CPUID v0.75 (September, 14, 2019)
CPUID function=7, subfunction=0, register=edx, bit=8 = AVX512_VP2INTERSECT.
CPUID function=7, subfunction=0, register=ecx, bit=29 = ENQCMD.
CPUID function=7, subfunction=1, register=eax, bit=5 = AVX512_BF16.
Data source:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-037.pdf
MAY 2019.


CPUID v0.74 (September, 08, 2019)
1) Add new bit CPUID function=80000008h, no subfunction, register=ebx,
bit=8 = MCOMMIT instruction
2) Modify associativity encoding for CPUID function=80000006h.
Data source:
AMD64 Architecture Programmer's Manual
Volume 3: General-Purpose and System Instructions.
Publication 24594. Rev 3.28. September 2019.
https://www.amd.com/en/support/tech-docs
https://developer.amd.com/resources/developer-guides-manuals/


CPUID v0.73 (August, 15, 2019)
Add new bit for AMD EPYC, EPYC2:
CPUID function=80000001h, no subfunction, register=ecx, bit=30 = AdMskExtn
Data source:
Processor Programming Reference (PPR) for 
AMD Family 17h Model 71h, Revision B0 Processors
56176 Rev 3.06 - Jul 17, 2019
https://www.amd.com/en/support/tech-docs


CPUID v0.72 (August, 4, 2019)
CPUID function=80000008h, no subfunction, register=ecx, bits[7-0]:
interpreted as: number of threads in the package - 1.
Old interpreting: number of cores - 1.


CPUID v0.71 (August, 3, 2019)
Add new bit for Intel security feature.
CPUID function=7, subfunction=0, register=edx, bit=10 = MD_CLEAR.
This bit means the processor is not affected by microarchitectural data sampling (MDS).
Data source:
https://software.intel.com/security-software-guidance/insights/deep-dive-cpuid-enumeration-and-architectural-msrs


CPUID v0.70 (July, 31, 2019)
Fix array size limit for decode RDPRU maximum read register value.


CPUID v0.69 (July, 31, 2019)
Add new bits for AMD EPYC, EPYC2:
1) CPUID function=80000008h, no subfunction, register=ebx, bit=4 = RDPRU
2) CPUID function=80000008h, no subfunction, register=edx, bits=[31-16] = RDPRU register limit
Data source:
AMD64 Architecture Programmer's Manual.
Volume 3: General-Purpose and System Instructions.
Publication No. 24594, Revision 3.27,  Date July 2019.


CPUID v0.68 (February, 9, 2019)
Edit names strings for CPU feature bits:
1) CPUID function=7, subfunction=0, register=ecx, bit=11 = AVX512_VNNI
2) CPUID function=7, subfunction=0, register=edx, bit=2  = AVX512_4VNNIW
3) CPUID function=7, subfunction=0, register=edx, bit=3  = AVX512_4FMAPS


CPUID v0.67 (February, 2, 2019)
Add new bits for QoS (Quality of Service Extensions).
1) CPUID function=80000008h, no subfunction, register=ebx, bit=6 = BE, 
AMD Bandwidth Enforcement.
2) CPUID function=80000020h, subfunction=0, register=ebx, bit=1 = L3BE, 
L3 external read bandwidth enforcement.
3) CPUID function=80000020h, subfunction=1, register=eax, bits=[31-0], 
L3 external read bandwidth enforcement bit range length.
4) CPUID function=80000020h, subfunction=1, register=edx, bits=[31-0], 
L3 external read bandwidth enforcement maximum COS (Class of Service)
number.
Data sources:
AMD64 Technology Platform Quality of Service Extensions.
Publication # 56375 Revision 1.01. Issue date August 2018.


CPUID v0.66 (October, 9, 2018)
Add INTEL variant of Speculative Store Bypass Disable (SSBD) feature.
CPUID function=00000007h, subfunction=0, register=edx, bit=31 = SSBD
Data sources:
336996-Speculative-Execution-Side-Channel-Mitigations.PDF
https://github.com/tycho/cpuid/blob/master/feature.c
https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00115.html


CPUID v0.65 (October, 9, 2018)
fix bug: EDX instead EBX.
1) CPUID function=80000007h, no subfunction, register=edx, bit=13 = Connected standby
2) CPUID function=80000007h, no subfunction, register=edx, bit=14 = Running average power limit (RAPL)


CPUID v0.64 (October, 9, 2018)
1)  CPUID function=00000007h, subfunction=0,  register=edx, bit=4  = Fast Short REP MOV
2)  CPUID function=80000008h, no subfunction, register=ebx, bit=9  = WBNOINVD
3)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=5  = WaitPKG instructions
4)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=25 = CLDEMOTE instruction
5)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=27 = MOVDIRI instruction
6)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=28 = MOVDIR64B instruction
7)  CPUID function=00000007h, subfunction=0,  register=edx, bit=28 = L1 Data Cache (L1D) Flush
8)  CPUID function=80000008h, no subfunction, register=ebx, bit=24 = SSBD
9)  CPUID function=80000008h, no subfunction, register=ebx, bit=25 = SSBD Keep Loads
10) CPUID function=80000008h, no subfunction, register=ebx, bit=26 = SSBD no longer need
11) CPUID function=80000007h, no subfunction, register=ebx, bit=13 = Connected standby
12) CPUID function=80000007h, no subfunction, register=ebx, bit=14 = Running average power limit (RAPL)
Data source PDF documents (for items 1-6):
architecture-instruction-set-extensions-programming-reference.PDF ( 319433-034, MAY 2018 ).
Data sources (for items 7, 11, 12):
https://github.com/tycho/cpuid/blob/master/feature.c
https://www.kernel.org/doc/html/latest/admin-guide/l1tf.html
Data source (for items 8-10)
124441_AMD64_SpeculativeStoreBypassDisable_Whitepaper_final.PDF REVISION 5.21.18


v0.62 build at JDK7 mode (legacy)
v0.63 build at JDK8 mode (advanced)


CPUID v0.62.
Improve comments for Intel-specific bits:
CPUID function=00000007h, register=edx, bit 26 = IBRS IBPB
Indirect branch restricted speculation and prediction barrier
CPUID function=00000007h, register=edx, bit 27 = STIBP
Single thread indirect branch predictor
CPUID function=00000007h, register=edx, bit 29 = ACAP MSR
IA32_ARCH_CAPABILITIES MSR


CPUID v0.61.
Improve comments for AMD-specific bits:
CPUID function=80000008h, register=ebx, bit 12 = IBPB
Indirect branch prediction barrier
CPUID function=80000008h, register=ebx, bit 14 = IBRS
Indirect branch restricted speculation
CPUID function=80000008h, register=ebx, bit 15 = STIBP
Single thread indirect branch predictor
CPUID function=80000008h, register=ebx, bit 16 = IBRS AON
Indirect branch restricted speculation always on
CPUID function=80000008h, register=ebx, bit 17 = STIBP AON
Single thread indirect branch predictor always on
CPUID function=80000008h, register=ebx, bit 18 = IBRS PREF
Indirect branch restricted speculation is preferred method
Source:
AMD64 TECHNOLOGY
Indirect branch control extension
Revision 2.7.18


CPUID v0.60.
Improve comments for bits:
CPUID function=8000000Ah, register=edx, bit 15 = VVMLS
Virtualized VMLOAD and VMSAVE instructions
CPUID function=8000000Ah, register=edx, bit 16 = VGIF
Virtualized global interrupt flag
Source:
Processor Programming
Reference (PPR)
for AMD Family 17h,
Model 01h, Revision B1
Processors.


CPUID v0.59
Fix L3 cache detection for AMD:
Function 80000006h, EDX.[31-18],
size units = 512 KB.
Source:
Processor Programming
Reference (PPR)
for AMD Family 17h,
Model 01h, Revision B1
Processors.


CPUID v0.58
Edit per-bit comments for 4 new features detection:
1) CPUID function=7, subfunction=0, register=ecx, bit=8  = GFNI
2) CPUID function=7, subfunction=0, register=ecx, bit=9  = VAES
3) CPUID function=7, subfunction=0, register=ecx, bit=10 = VPCLMULQDQ
4) CPUID function=7, subfunction=0, register=ecx, bit=13 = TME
GFNI       = Galois Field Numeric Instructions
VAES       = Vector Advanced Encryption Standard
VPCLMULQDQ = Carry-Less Multiplication Quadword instruction
TME        = Total Memory Encryption
Data source PDF document (about GFNI, VAES, VPCLMULQDQ):
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-030
OCTOBER 2017.
Data source PDF document (about TME):
Intel Architecture
Memory Encryption Technologies
Specification
Ref# 336907-001US
Rev 1.1
DECEMBER 2017.


CPUID v0.57
Add 6 new AVX512 features detection:
1) CPUID function=7, subfunction=0, register=ecx, bit=6  = AVX512VBMI2
2) CPUID function=7, subfunction=0, register=ecx, bit=11 = AVX512_4VNNI
3) CPUID function=7, subfunction=0, register=ecx, bit=12 = AVX512BITALG
4) CPUID function=7, subfunction=0, register=ecx, bit=14 = AVX512VPOPCNTDQ
5) CPUID function=7, subfunction=0, register=edx, bit=2  = AVX512_4VNNIW
6) CPUID function=7, subfunction=0, register=edx, bit=3  = AVX512_4FMAPS
AVX512VBMI2     = Vector Byte Manipulation 2
AVX512_4VNNI    = 4-iteration Vector Neural Network Instructions
AVX512BITALG    = Bit Algorithms
AVX512VPOPCNTDQ = Count number of bits set, additional instructions
AVX512_4VNNIW   = 4-iteration Vector Neural Network Instructions, word precision
AVX512_4FMAPS   = 4-iteration Fused Multiply-Add, single precision
Data source PDF document:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-030
OCTOBER 2017.

