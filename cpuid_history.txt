CPUID v1.00.05 (May, 24, 2020)
This version associated with update of Intel public document:
Architecture-instruction-set-extensions-programming-reference.PDF

Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
Ref. #319433-038
MARCH 2020.

This PDF below referenced as [DOC].

CPUID function number = CPUID input EAX, 
CPUID subfunction number = CPUID input ECX.

Add new 7 bits and bitfields.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
00000007h    0       EDX    14       SERIALIZE instruction
00000007h    0       EDX    15       HYBRID, the processor is identified as hybrid part
00000007h    0       EDX    16       TSXLDTRK, the processor supports Intel TSX suspend load address tracking
0000000Fh    1       EAX    [07-00]  RDT CNT: 00h=24bit counters, 01h=25bit counters, 25h=61bit counters
0000000Fh    1       EAX    8        QM OVF: IA32_QM_CTR MSR bit 61 is overflow bit
00000010h    3       ECX    0        PT MBA: Per-thread Memory Bandwidth Allocation controls supported
0000001Ah    0       EAX    [31-24]  CORE TYPE: 10h=Reserved, 20h=Intel Atom, 30h=Reserved, 40h=Intel Core
---------------------------------------------------------------------------------------------------------------

Some details about each bit(bitfield):

CPUID function=00000007h, subfunction=0, register=EDX, bit=14
SERIALIZE instruction.
This is alternative for legacy method (use CPUID for serialization),
unlike CPUID, SERIALIZE not changes CPU registers.
[DOC] page 2.14 (72).

CPUID function=00000007h, subfunction=0, register=EDX, bit=15
HYBRID, the processor is identified as hybrid part.
Different cores can be mixed at CPU package?
[DOC] page 1.33 (47).

CPUID function=00000007h, subfunction=0, register=EDX, bit=16
TSXLDTRK, the processor supports Intel TSX suspend load address tracking,
instructions:
XRESLDTRK - Resume Tracking Load Address.
XSUSLDTRK - Suspend Tracking Load Address.
[DOC] page 5.1 (93).

CPUID function=0000000Fh, subfunction=1, register=EAX, bits=[07-00]
RDT CNT: 00h=24bit counters, 01h=25bit counters, 25h=61bit counters.
Width of bandwidth monitoring counters.
[DOC] page 9.2 (130-131).

CPUID function=0000000Fh, subfunction=1, register=EAX, bit=8
QM OVF: IA32_QM_CTR MSR bit 61 is overflow bit.
Width of bandwidth monitoring counters and bits interpretation.
[DOC] page 9.2 (130-131).

CPUID function=00000010h, subfunction=3, register=ECX, bit=0
PT MBA: Per-thread MBA controls supported.
Per-thread Memory Bandwidth Allocation control.
[DOC] page 9.6 (134).

CPUID function=0000001Ah, subfunction=0, register=EAX, bit=[31-24]
CORE TYPE: 10h=Reserved, 20h=Intel Atom, 30h=Reserved, 40h=Intel Core
Different cores can be mixed at CPU package?
[DOC] page 1.33 (47).

Plus, CPUID summary at [DOC] page 1.4-1.21 (18-35)

See for more details:
https://www.intel.com/content/www/us/en/design/resource-design-center.html
https://software.intel.com/content/www/us/en/develop/download/intel-architecture-instruction-set-extensions-and-future-features-programming-reference.html?wapkw=instruction%20set%20extensions%20reference%20manual
https://software.intel.com/content/www/us/en/develop/articles/intel-sdm.html?wapkw=instruction%20set%20extensions%20reference%20manual
https://software.intel.com/content/www/us/en/develop/download/intel-64-and-ia-32-architectures-optimization-reference-manual.html?wapkw=optimization%20reference%20manual
---------------------------------------------------------------------------------------------------------------


CPUID v1.00.04 (April, 29, 2020)
This version associated with big update of AMD public documents:
update secure communication methods between Hypervisors and Guests,
support SNP (Secure Nested Paging), plus AMD Secure Processor (AMD-SP) functionality.
See below [1]-[6] documents reference.

Add new 10 bits.
---------------------------------------------------------------------------------------------------------------
Function  | Sub f. | Reg. | Bit(s) | Comment
---------------------------------------------------------------------------------------------------------------
8000000Ah   -        EDX    24       TLBICTL, TLB instructions control: INVLPGB, TLBSYNC instructions
8000001Fh   -        EAX    15       PHIBS, PreventHostIbs, Disallowing IBS use by the host supported
8000001Fh   -        EAX    14       DBG SW, DebugSwap, Full debug state swap supported for SEV-ES guests
8000001Fh   -        EAX    13       ALT INJ, AlternateInjection, Alternate Injection supported
8000001Fh   -        EAX    12       RES INJ, RestrictedInjection, restricted injection supported
8000001Fh   -        EAX    11       HOST 64, 64BitHost, SEV guest execution only allowed from 64-bit host
8000001Fh   -        EAX    10       HWCC ED, HwEnfCacheCoh, Hardware cache coherency across encryption domains enforced
8000001Fh   -        EAX    5        VMPL, Virtual Machine Permission (Privilege, Priority) Levels
8000001Fh   -        EAX    4        SEV-SNP,  Secure Nested Paging
8000001Fh   -        EBX    15-12    NumVMPL, Number of VM Permission Levels supported
---------------------------------------------------------------------------------------------------------------
Some detalization, 
[x] means data source, see below, enumerated [x].

CPUID.8000000Ah.EDX.24 = TLBICTL, TLB instructions control: INVLPGB, TLBSYNC instructions
This bit indicates support instructions:
Bit position "TLBICTL" declared at [3].
INVLPGB  (Invalidate TLB Entry(Entries) with Broadcast), instruction detail description at [3].
TLBSYNC (Synchronize TLB Invalidations), instruction detail description at [3].

CPUID.8000001Fh.EAX.15 = PreventHostIbs, Disallowing IBS use by the host supported
Bit position "PreventHostIbs" declared at [3].
Functional and used MSR description at [2].

CPUID.8000001Fh.EAX.14 = DebugSwap, Full debug state swap supported for SEV-ES guests
Bit position "DebugSwap" declared at [3].
Functional and used MSR description at [2].

CPUID.8000001Fh.EAX.13 = AlternateInjection, Alternate Injection supported
Bit position "AlternateInjection" declared at [3].
Description at [2].

CPUID.8000001Fh.EAX.12 = RestrictedInjection, restricted injection supported
Bit position "RestrictedInjection" declared at [3].
Description at [2].

CPUID.8000001Fh.EAX.11 = 64BitHost, SEV guest execution only allowed from 64-bit host
Bit position "64BitHost" declared at [3].

CPUID.8000001Fh.EAX.10 = HwEnfCacheCoh, Hardware cache coherency across encryption domains enforced
Bit position "HwEnfCacheCoh" declared at [3].

CPUID.8000001Fh.EAX.5 = VMPL, Virtual Machine Permission (Privilege) Levels
Bit position "VMPL" declared at [3].
Functional and used resources description at [2], [3].

CPUID.8000001Fh.EAX.4 = SEV-SNP,  Secure Nested Paging
Bit position "SEV-SNP" declared at [3].
Functional, used resources and new SNP support instruction sub-set description at [2], [3].

CPUID.8000001Fh.EBX.15-12 = NumVMPL, Number of VM Permission Levels supported
Bit position "NumVMPL" declared at [3].
Functional and used resources description of VMPL at [2], [3],
this field associated with VMPL.

---------------------------------------------------------------------------------------------------------------
Data source and detail information at documents:

[1] AMD64 Architecture Programmer's Manual 
    Volume 1 Application Programming. 
    Pub #24592 Rev 3.22 December 2017.

[2] AMD64 Architecture Programmer's Manual 
    Volume 2 System Programming. 
    Pub #24593 Rev 3.33 April 2020.

[3] AMD64 Architecture Programmer's Manual 
    Volume 3. General Purpose and System Instuctions.
    Pub #24594 Rev 3.30 April 2020.

[4] AMD64 Architecture Programmer's Manual 
    Volume 4. 128-Bit and 256-Bit Media Instructions.
    Pub #26568 Rev 3.23 February 2019.

[5] AMD64 Architecture Programmer's Manual 
    Volume 5. 64-Bit Media and x87 Floating-Point
    Instructions.
    Pub #26569 Rev 3.15 May 2018.

[6] AMD64 Architecture Programmer's Manual 
    Volumes 1-5
    (combined, all volumes 1-5 at one PDF)
    Pub #40332 Rev 4.00 April 2020.

https://developer.amd.com/resources/developer-guides-manuals/
https://www.amd.com/en/support/tech-docs
---------------------------------------------------------------------------------------------------------------



CPUID v1.00.03 (February, 13, 2020)
Add new bit:
Function=8000000Ah, register=EDX, bit=20. Guest Spec_ctl.
Data sources:
1) Preliminary Processor Programming Reference (PPR)
for AMD Family 17h Model 31h Revision B0 Processors
55803 Rev 0.54 - Sep 12, 2019.
2) White Paper. 
AMD64 Technology Indirect Branch Control Extension.
Revision 7.10.18.


CPUID v1.00.02 (October, 27, 2019)
Java code refactoring and optimization, internal changes.
Report generation optimized by StringBuilder class.


CPUID v1.00.01 (October, 13, 2019)
Java code refactoring and optimization, internal changes.


October, 10, 2019.
Add refactoring branch.


CPUID v0.83 (October, 7, 2019)
Add new AMD virtualization options feature bits:
1) Function=8000000Ah, register=EDX, bit=17.  GMET = Guest mode execute trap extension.
2) Function=8000001Fh, register=EAX, bit=16.  VTE = Virtual transparent encryption.
Data source:
AMD64 Architecture Programmer's Manual
Volume 2: System Programming.
Publication 24593. Rev 3.32. October 2019.


CPUID v0.82 (October, 5, 2019)
Bug fix for CPUID function 0000000Dh (context management),
correct detect features:
XSAVEOPT support,
XSAVEC and compact XRSTOR form support,
XGETBV function 1 support, 
XSAVES/XRSTORS and IA32_XSS.


CPUID v0.81 (September, 20, 2019)
Update method for write Region size = F ( Address width ).


CPUID v0.80 (September, 20, 2019)
Update CPUID function 00000012h.


CPUID v0.79 (September, 19, 2019)
1) Bug fix: 
if LOAD BINARY function used but cancelled without load file, 
next use SAVE BINARY function save CPUID.BIN file with size=0.
2) Update CPUID function 00000012h.


CPUID v0.78 (September, 18, 2019)
1) Internal changes, support reserved CPUID functions
as child classes of parent class.
2) Update function 00000006h.
3) Update function 0000000Dh.


CPUID v0.77 (September, 16, 2019)
Add new bits and bitfields for CPUID functions:
00000006h, 00000007h, 00000015h.
Data source:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-037.pdf
MAY 2019.


CPUID v0.76 (September, 16, 2019)
Add and modify java classes for CPUID functions:
1) Function=00000010h , Intel Resource Director Technology (RDT).
2) Function=0000001Bh , PCONFIG instruction.
3) Function=0000001Fh , Advanced topology enumeration.
Technological update, this functions yet locked, under debug.
Data source:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-037.pdf
MAY 2019.


CPUID v0.75 (September, 14, 2019)
CPUID function=7, subfunction=0, register=edx, bit=8 = AVX512_VP2INTERSECT.
CPUID function=7, subfunction=0, register=ecx, bit=29 = ENQCMD.
CPUID function=7, subfunction=1, register=eax, bit=5 = AVX512_BF16.
Data source:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-037.pdf
MAY 2019.


CPUID v0.74 (September, 08, 2019)
1) Add new bit CPUID function=80000008h, no subfunction, register=ebx,
bit=8 = MCOMMIT instruction
2) Modify associativity encoding for CPUID function=80000006h.
Data source:
AMD64 Architecture Programmer's Manual
Volume 3: General-Purpose and System Instructions.
Publication 24594. Rev 3.28. September 2019.
https://www.amd.com/en/support/tech-docs
https://developer.amd.com/resources/developer-guides-manuals/


CPUID v0.73 (August, 15, 2019)
Add new bit for AMD EPYC, EPYC2:
CPUID function=80000001h, no subfunction, register=ecx, bit=30 = AdMskExtn
Data source:
Processor Programming Reference (PPR) for 
AMD Family 17h Model 71h, Revision B0 Processors
56176 Rev 3.06 - Jul 17, 2019
https://www.amd.com/en/support/tech-docs


CPUID v0.72 (August, 4, 2019)
CPUID function=80000008h, no subfunction, register=ecx, bits[7-0]:
interpreted as: number of threads in the package - 1.
Old interpreting: number of cores - 1.


CPUID v0.71 (August, 3, 2019)
Add new bit for Intel security feature.
CPUID function=7, subfunction=0, register=edx, bit=10 = MD_CLEAR.
This bit means the processor is not affected by microarchitectural data sampling (MDS).
Data source:
https://software.intel.com/security-software-guidance/insights/deep-dive-cpuid-enumeration-and-architectural-msrs


CPUID v0.70 (July, 31, 2019)
Fix array size limit for decode RDPRU maximum read register value.


CPUID v0.69 (July, 31, 2019)
Add new bits for AMD EPYC, EPYC2:
1) CPUID function=80000008h, no subfunction, register=ebx, bit=4 = RDPRU
2) CPUID function=80000008h, no subfunction, register=edx, bits=[31-16] = RDPRU register limit
Data source:
AMD64 Architecture Programmer's Manual.
Volume 3: General-Purpose and System Instructions.
Publication No. 24594, Revision 3.27,  Date July 2019.


CPUID v0.68 (February, 9, 2019)
Edit names strings for CPU feature bits:
1) CPUID function=7, subfunction=0, register=ecx, bit=11 = AVX512_VNNI
2) CPUID function=7, subfunction=0, register=edx, bit=2  = AVX512_4VNNIW
3) CPUID function=7, subfunction=0, register=edx, bit=3  = AVX512_4FMAPS


CPUID v0.67 (February, 2, 2019)
Add new bits for QoS (Quality of Service Extensions).
1) CPUID function=80000008h, no subfunction, register=ebx, bit=6 = BE, 
AMD Bandwidth Enforcement.
2) CPUID function=80000020h, subfunction=0, register=ebx, bit=1 = L3BE, 
L3 external read bandwidth enforcement.
3) CPUID function=80000020h, subfunction=1, register=eax, bits=[31-0], 
L3 external read bandwidth enforcement bit range length.
4) CPUID function=80000020h, subfunction=1, register=edx, bits=[31-0], 
L3 external read bandwidth enforcement maximum COS (Class of Service)
number.
Data sources:
AMD64 Technology Platform Quality of Service Extensions.
Publication # 56375 Revision 1.01. Issue date August 2018.


CPUID v0.66 (October, 9, 2018)
Add INTEL variant of Speculative Store Bypass Disable (SSBD) feature.
CPUID function=00000007h, subfunction=0, register=edx, bit=31 = SSBD
Data sources:
336996-Speculative-Execution-Side-Channel-Mitigations.PDF
https://github.com/tycho/cpuid/blob/master/feature.c
https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00115.html


CPUID v0.65 (October, 9, 2018)
fix bug: EDX instead EBX.
1) CPUID function=80000007h, no subfunction, register=edx, bit=13 = Connected standby
2) CPUID function=80000007h, no subfunction, register=edx, bit=14 = Running average power limit (RAPL)


CPUID v0.64 (October, 9, 2018)
1)  CPUID function=00000007h, subfunction=0,  register=edx, bit=4  = Fast Short REP MOV
2)  CPUID function=80000008h, no subfunction, register=ebx, bit=9  = WBNOINVD
3)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=5  = WaitPKG instructions
4)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=25 = CLDEMOTE instruction
5)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=27 = MOVDIRI instruction
6)  CPUID function=00000007h, subfunction=0,  register=ecx, bit=28 = MOVDIR64B instruction
7)  CPUID function=00000007h, subfunction=0,  register=edx, bit=28 = L1 Data Cache (L1D) Flush
8)  CPUID function=80000008h, no subfunction, register=ebx, bit=24 = SSBD
9)  CPUID function=80000008h, no subfunction, register=ebx, bit=25 = SSBD Keep Loads
10) CPUID function=80000008h, no subfunction, register=ebx, bit=26 = SSBD no longer need
11) CPUID function=80000007h, no subfunction, register=ebx, bit=13 = Connected standby
12) CPUID function=80000007h, no subfunction, register=ebx, bit=14 = Running average power limit (RAPL)
Data source PDF documents (for items 1-6):
architecture-instruction-set-extensions-programming-reference.PDF ( 319433-034, MAY 2018 ).
Data sources (for items 7, 11, 12):
https://github.com/tycho/cpuid/blob/master/feature.c
https://www.kernel.org/doc/html/latest/admin-guide/l1tf.html
Data source (for items 8-10)
124441_AMD64_SpeculativeStoreBypassDisable_Whitepaper_final.PDF REVISION 5.21.18


v0.62 build at JDK7 mode (legacy)
v0.63 build at JDK8 mode (advanced)


CPUID v0.62.
Improve comments for Intel-specific bits:
CPUID function=00000007h, register=edx, bit 26 = IBRS IBPB
Indirect branch restricted speculation and prediction barrier
CPUID function=00000007h, register=edx, bit 27 = STIBP
Single thread indirect branch predictor
CPUID function=00000007h, register=edx, bit 29 = ACAP MSR
IA32_ARCH_CAPABILITIES MSR


CPUID v0.61.
Improve comments for AMD-specific bits:
CPUID function=80000008h, register=ebx, bit 12 = IBPB
Indirect branch prediction barrier
CPUID function=80000008h, register=ebx, bit 14 = IBRS
Indirect branch restricted speculation
CPUID function=80000008h, register=ebx, bit 15 = STIBP
Single thread indirect branch predictor
CPUID function=80000008h, register=ebx, bit 16 = IBRS AON
Indirect branch restricted speculation always on
CPUID function=80000008h, register=ebx, bit 17 = STIBP AON
Single thread indirect branch predictor always on
CPUID function=80000008h, register=ebx, bit 18 = IBRS PREF
Indirect branch restricted speculation is preferred method
Source:
AMD64 TECHNOLOGY
Indirect branch control extension
Revision 2.7.18


CPUID v0.60.
Improve comments for bits:
CPUID function=8000000Ah, register=edx, bit 15 = VVMLS
Virtualized VMLOAD and VMSAVE instructions
CPUID function=8000000Ah, register=edx, bit 16 = VGIF
Virtualized global interrupt flag
Source:
Processor Programming
Reference (PPR)
for AMD Family 17h,
Model 01h, Revision B1
Processors.


CPUID v0.59
Fix L3 cache detection for AMD:
Function 80000006h, EDX.[31-18],
size units = 512 KB.
Source:
Processor Programming
Reference (PPR)
for AMD Family 17h,
Model 01h, Revision B1
Processors.


CPUID v0.58
Edit per-bit comments for 4 new features detection:
1) CPUID function=7, subfunction=0, register=ecx, bit=8  = GFNI
2) CPUID function=7, subfunction=0, register=ecx, bit=9  = VAES
3) CPUID function=7, subfunction=0, register=ecx, bit=10 = VPCLMULQDQ
4) CPUID function=7, subfunction=0, register=ecx, bit=13 = TME
GFNI       = Galois Field Numeric Instructions
VAES       = Vector Advanced Encryption Standard
VPCLMULQDQ = Carry-Less Multiplication Quadword instruction
TME        = Total Memory Encryption
Data source PDF document (about GFNI, VAES, VPCLMULQDQ):
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-030
OCTOBER 2017.
Data source PDF document (about TME):
Intel Architecture
Memory Encryption Technologies
Specification
Ref# 336907-001US
Rev 1.1
DECEMBER 2017.


CPUID v0.57
Add 6 new AVX512 features detection:
1) CPUID function=7, subfunction=0, register=ecx, bit=6  = AVX512VBMI2
2) CPUID function=7, subfunction=0, register=ecx, bit=11 = AVX512_4VNNI
3) CPUID function=7, subfunction=0, register=ecx, bit=12 = AVX512BITALG
4) CPUID function=7, subfunction=0, register=ecx, bit=14 = AVX512VPOPCNTDQ
5) CPUID function=7, subfunction=0, register=edx, bit=2  = AVX512_4VNNIW
6) CPUID function=7, subfunction=0, register=edx, bit=3  = AVX512_4FMAPS
AVX512VBMI2     = Vector Byte Manipulation 2
AVX512_4VNNI    = 4-iteration Vector Neural Network Instructions
AVX512BITALG    = Bit Algorithms
AVX512VPOPCNTDQ = Count number of bits set, additional instructions
AVX512_4VNNIW   = 4-iteration Vector Neural Network Instructions, word precision
AVX512_4FMAPS   = 4-iteration Fused Multiply-Add, single precision
Data source PDF document:
Intel Architecture
Instruction Set Extensions and Future Features
Programming Reference
319433-030
OCTOBER 2017.

